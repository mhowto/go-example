// Code generated by protoc-gen-go. DO NOT EDIT.
// source: timenow.proto

/*
Package helloworld is a generated protocol buffer package.

It is generated from these files:
	timenow.proto

It has these top-level messages:
	WhatsTimeNowRequest
	WhatsTimeNowReply
*/
package helloworld

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type WhatsTimeNowRequest struct {
}

func (m *WhatsTimeNowRequest) Reset()                    { *m = WhatsTimeNowRequest{} }
func (m *WhatsTimeNowRequest) String() string            { return proto.CompactTextString(m) }
func (*WhatsTimeNowRequest) ProtoMessage()               {}
func (*WhatsTimeNowRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// The response message containing the greetings
type WhatsTimeNowReply struct {
	Time string `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
}

func (m *WhatsTimeNowReply) Reset()                    { *m = WhatsTimeNowReply{} }
func (m *WhatsTimeNowReply) String() string            { return proto.CompactTextString(m) }
func (*WhatsTimeNowReply) ProtoMessage()               {}
func (*WhatsTimeNowReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WhatsTimeNowReply) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func init() {
	proto.RegisterType((*WhatsTimeNowRequest)(nil), "helloworld.WhatsTimeNowRequest")
	proto.RegisterType((*WhatsTimeNowReply)(nil), "helloworld.WhatsTimeNowReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Timer service

type TimerClient interface {
	// Sends a greeting
	WhatsTimeNow(ctx context.Context, in *WhatsTimeNowRequest, opts ...grpc.CallOption) (*WhatsTimeNowReply, error)
}

type timerClient struct {
	cc *grpc.ClientConn
}

func NewTimerClient(cc *grpc.ClientConn) TimerClient {
	return &timerClient{cc}
}

func (c *timerClient) WhatsTimeNow(ctx context.Context, in *WhatsTimeNowRequest, opts ...grpc.CallOption) (*WhatsTimeNowReply, error) {
	out := new(WhatsTimeNowReply)
	err := grpc.Invoke(ctx, "/helloworld.Timer/WhatsTimeNow", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Timer service

type TimerServer interface {
	// Sends a greeting
	WhatsTimeNow(context.Context, *WhatsTimeNowRequest) (*WhatsTimeNowReply, error)
}

func RegisterTimerServer(s *grpc.Server, srv TimerServer) {
	s.RegisterService(&_Timer_serviceDesc, srv)
}

func _Timer_WhatsTimeNow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WhatsTimeNowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimerServer).WhatsTimeNow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Timer/WhatsTimeNow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimerServer).WhatsTimeNow(ctx, req.(*WhatsTimeNowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Timer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.Timer",
	HandlerType: (*TimerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WhatsTimeNow",
			Handler:    _Timer_WhatsTimeNow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "timenow.proto",
}

func init() { proto.RegisterFile("timenow.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0xc9, 0xcc, 0x4d,
	0xcd, 0xcb, 0x2f, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xca, 0x48, 0xcd, 0xc9, 0xc9,
	0x2f, 0xcf, 0x2f, 0xca, 0x49, 0x51, 0x12, 0xe5, 0x12, 0x0e, 0xcf, 0x48, 0x2c, 0x29, 0x0e, 0xc9,
	0xcc, 0x4d, 0xf5, 0xcb, 0x2f, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x52, 0xe7, 0x12,
	0x44, 0x15, 0x2e, 0xc8, 0xa9, 0x14, 0x12, 0xe2, 0x62, 0x01, 0x19, 0x24, 0xc1, 0xa8, 0xc0, 0xa8,
	0xc1, 0x19, 0x04, 0x66, 0x1b, 0x45, 0x72, 0xb1, 0x82, 0xd4, 0x14, 0x09, 0x05, 0x70, 0xf1, 0x20,
	0xeb, 0x10, 0x92, 0xd7, 0x43, 0xd8, 0xa2, 0x87, 0xc5, 0x0a, 0x29, 0x59, 0xdc, 0x0a, 0x0a, 0x72,
	0x2a, 0x95, 0x18, 0x9c, 0xb4, 0xb8, 0x24, 0x32, 0xf3, 0xf5, 0xd2, 0x8b, 0x0a, 0x92, 0xf5, 0x52,
	0x2b, 0x12, 0x73, 0x0b, 0x72, 0x52, 0x8b, 0xf5, 0xa0, 0x1e, 0x71, 0xe2, 0x81, 0xaa, 0x0d, 0x00,
	0x79, 0x28, 0x80, 0x31, 0x89, 0x0d, 0xec, 0x33, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03,
	0x00, 0xdb, 0xa1, 0xea, 0x00, 0x00, 0x00,
}
